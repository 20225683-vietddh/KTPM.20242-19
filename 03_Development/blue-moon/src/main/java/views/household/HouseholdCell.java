package views.household;

import javafx.stage.Stage;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.layout.Priority;
import models.Household;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import services.HouseholdService;
import views.messages.ConfirmationDialog;
import views.messages.ErrorDialog;
import views.messages.InformationDialog;

public class HouseholdCell extends HBox {
	private final Stage stage;
	private Household household;
	private HouseholdHandler parentHandler;
	private HouseholdService householdService;
	
	public HouseholdCell(Stage stage, Household household, HouseholdHandler parentHandler) {
		this.stage = stage;
		this.household = household;
		this.parentHandler = parentHandler;
		try {
			this.householdService = new HouseholdService();
		} catch (Exception e) {
			e.printStackTrace();
		}
		setupCell();
	}
	
	private void setupCell() {
		this.setAlignment(Pos.CENTER_LEFT);
		this.setSpacing(20);
		this.setPadding(new Insets(15));
		this.setStyle("-fx-background-color: white; -fx-border-color: #e0e0e0; -fx-border-radius: 8; -fx-background-radius: 8;");
		this.setPrefHeight(80);

		VBox infoSection = new VBox(5);
		infoSection.setAlignment(Pos.CENTER_LEFT);
		HBox.setHgrow(infoSection, Priority.ALWAYS);
		
		Label lblHouseNumber = new Label("S·ªë nh√†: " + household.getHouseNumber());
		lblHouseNumber.setFont(Font.font("System", FontWeight.BOLD, 16));
		lblHouseNumber.setStyle("-fx-text-fill: #2c3e50;");

		String address = household.getStreet() + ", " + household.getWard() + ", " + household.getDistrict();
		Label lblAddress = new Label("ƒê·ªãa ch·ªâ: " + address);
		lblAddress.setFont(Font.font("System", 14));
		lblAddress.setStyle("-fx-text-fill: #7f8c8d;");

		Label lblId = new Label("ID: " + household.getHouseholdId());
		lblId.setFont(Font.font("System", 12));
		lblId.setStyle("-fx-text-fill: #95a5a6;");
		
		infoSection.getChildren().addAll(lblHouseNumber, lblAddress, lblId);
		
		HBox actionSection = new HBox(10);
		actionSection.setAlignment(Pos.CENTER_RIGHT);
		
		Button btnView = new Button("Xem chi ti·∫øt");
		btnView.setStyle("-fx-background-color: #3498db; -fx-text-fill: white; -fx-background-radius: 5; -fx-cursor: hand;");
		btnView.setPrefWidth(100);
		btnView.setOnAction(e -> handleViewDetails());
		
		Button btnEdit = new Button("S·ª≠a");
		btnEdit.setStyle("-fx-background-color: #f39c12; -fx-text-fill: white; -fx-background-radius: 5; -fx-cursor: hand;");
		btnEdit.setPrefWidth(80);
		btnEdit.setOnAction(e -> handleEdit());
		
		Button btnDelete = new Button("X√≥a");
		btnDelete.setStyle("-fx-background-color: #e74c3c; -fx-text-fill: white; -fx-background-radius: 5; -fx-cursor: hand;");
		btnDelete.setPrefWidth(80);
		btnDelete.setOnAction(e -> handleDelete());
		
		actionSection.getChildren().addAll(btnView, btnEdit, btnDelete);
		
		this.getChildren().addAll(infoSection, actionSection);
	}
	
	private void handleViewDetails() {
		try {
			HouseholdDetailHandler detailHandler = new HouseholdDetailHandler(stage, household);
			System.out.println("Viewing details for household ID: " + household.getHouseholdId());
		} catch (Exception e) {
			e.printStackTrace();
			views.messages.ErrorDialog.showError("L·ªói", "Kh√¥ng th·ªÉ m·ªü chi ti·∫øt h·ªô kh·∫©u!");
		}
	}
	
	private void handleEdit() {
		try {
			UpdateHouseholdHandler updateHandler = new UpdateHouseholdHandler(stage, household, parentHandler);
			System.out.println("Opening edit form for household ID: " + household.getHouseholdId());
		} catch (Exception e) {
			e.printStackTrace();
			views.messages.ErrorDialog.showError("L·ªói", "Kh√¥ng th·ªÉ m·ªü form ch·ªânh s·ª≠a h·ªô kh·∫©u!");
		}
	}
	
	private void handleDelete() {
		try {
			String warningMessage = "üö® C·∫¢NH B√ÅO NGHI√äM TR·ªåNG! üö®\n\n" +
									"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a h·ªô kh·∫©u \"" + household.getHouseNumber() + "\" kh√¥ng?\n\n" +
									"‚ö†Ô∏è H√ÄNH ƒê·ªòNG N√ÄY S·∫º:\n" +
									"‚Ä¢ X√≥a Vƒ®NH VI·ªÑN t·∫•t c·∫£ " + household.getNumberOfResidents() + " nh√¢n kh·∫©u trong h·ªô\n" +
									"‚Ä¢ X√≥a to√†n b·ªô th√¥ng tin h·ªô kh·∫©u\n" +
									"‚Ä¢ Reset ph√≤ng \"" + household.getHouseNumber() + "\" v·ªÅ tr·∫°ng th√°i tr·ªëng\n" +
									"‚Ä¢ KH√îNG TH·ªÇ HO√ÄN T√ÅC!\n\n" +
									"ƒê√¢y l√† h√†nh ƒë·ªông c·ª±c k·ª≥ nguy hi·ªÉm. B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c?";
			
			String option = ConfirmationDialog.getOption(warningMessage);
			boolean confirmed = "YES".equals(option);
			
			if (confirmed) {
				// X√°c nh·∫≠n l·∫ßn 2 ƒë·ªÉ ƒë·∫£m b·∫£o
				String finalConfirm = "L·∫¶N X√ÅC NH·∫¨N CU·ªêI C√ôNG!\n\n" +
									 "B·∫°n th·ª±c s·ª± mu·ªën x√≥a vƒ©nh vi·ªÖn h·ªô kh·∫©u \"" + household.getHouseNumber() + "\" " +
									 "v√† t·∫•t c·∫£ " + household.getNumberOfResidents() + " nh√¢n kh·∫©u b√™n trong?\n\n" +
									 "Nh·∫≠p \"X√ÅC NH·∫¨N\" ƒë·ªÉ ti·∫øp t·ª•c:";
				
				String finalOption = ConfirmationDialog.getOption(finalConfirm);
				if ("YES".equals(finalOption)) {
					boolean success = householdService.deleteHouseholdSafely(household.getHouseholdId());
					
					if (success) {
						InformationDialog.showNotification("X√≥a th√†nh c√¥ng", 
							"ƒê√£ x√≥a h·ªô kh·∫©u \"" + household.getHouseNumber() + "\" v√† t·∫•t c·∫£ nh√¢n kh·∫©u!\n" +
							"Ph√≤ng ƒë√£ ƒë∆∞·ª£c reset v·ªÅ tr·∫°ng th√°i tr·ªëng.");
						
						// Refresh parent list
						if (parentHandler != null) {
							parentHandler.loadHouseholdList("");
						}
					} else {
						ErrorDialog.showError("L·ªói", "Kh√¥ng th·ªÉ x√≥a h·ªô kh·∫©u!");
					}
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
			ErrorDialog.showError("L·ªói h·ªá th·ªëng", e.getMessage());
		}
	}
} 