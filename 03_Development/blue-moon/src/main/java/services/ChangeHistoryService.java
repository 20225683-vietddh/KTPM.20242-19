package services;

import dao.changehistory.ChangeHistoryDAO;
import dao.changehistory.ChangeHistoryDAOPostgreSQL;
import models.ChangeHistoryRecord;
import models.Resident;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;

public class ChangeHistoryService {
    private ChangeHistoryDAO changeHistoryDAO;
    
    public ChangeHistoryService() throws SQLException {
        this.changeHistoryDAO = new ChangeHistoryDAOPostgreSQL();
    }
    
    /**
     * Ghi l·∫°i vi·ªác th√™m nh√¢n kh·∫©u m·ªõi
     */
    public void recordResidentAdded(Resident resident) {
        ChangeHistoryRecord record = new ChangeHistoryRecord(
            ChangeHistoryRecord.CHANGE_TYPE_ADD,
            LocalDate.now(),
            resident.getResidentId(),
            resident.getHouseholdId()
        );
        
        boolean success = changeHistoryDAO.addChangeRecord(record);
        if (success) {
            System.out.println("‚úÖ ƒê√£ ghi l·∫°i l·ªãch s·ª≠: TH√äM nh√¢n kh·∫©u " + resident.getFullName() + 
                             " (ID: " + resident.getResidentId() + ") v√†o h·ªô kh·∫©u " + resident.getHouseholdId());
        } else {
            System.err.println("‚ùå L·ªói ghi l·∫°i l·ªãch s·ª≠ th√™m nh√¢n kh·∫©u: " + resident.getFullName());
        }
    }
    
    /**
     * Ghi l·∫°i vi·ªác c·∫≠p nh·∫≠t nh√¢n kh·∫©u
     */
    public void recordResidentUpdated(Resident resident) {
        ChangeHistoryRecord record = new ChangeHistoryRecord(
            ChangeHistoryRecord.CHANGE_TYPE_UPDATE,
            LocalDate.now(),
            resident.getResidentId(),
            resident.getHouseholdId()
        );
        
        boolean success = changeHistoryDAO.addChangeRecord(record);
        if (success) {
            System.out.println("‚úÖ ƒê√£ ghi l·∫°i l·ªãch s·ª≠: C·∫¨P NH·∫¨T nh√¢n kh·∫©u " + resident.getFullName() + 
                             " (ID: " + resident.getResidentId() + ") trong h·ªô kh·∫©u " + resident.getHouseholdId());
        } else {
            System.err.println("‚ùå L·ªói ghi l·∫°i l·ªãch s·ª≠ c·∫≠p nh·∫≠t nh√¢n kh·∫©u: " + resident.getFullName());
        }
    }
    
    /**
     * Ghi l·∫°i vi·ªác x√≥a nh√¢n kh·∫©u
     */
    public void recordResidentDeleted(int residentId, int householdId, String residentName) {
        ChangeHistoryRecord record = new ChangeHistoryRecord(
            ChangeHistoryRecord.CHANGE_TYPE_DELETE,
            LocalDate.now(),
            residentId,
            householdId
        );
        
        boolean success = changeHistoryDAO.addChangeRecord(record);
        if (success) {
            System.out.println("‚úÖ ƒê√£ ghi l·∫°i l·ªãch s·ª≠: X√ìA nh√¢n kh·∫©u " + residentName + 
                             " (ID: " + residentId + ") kh·ªèi h·ªô kh·∫©u " + householdId);
        } else {
            System.err.println("‚ùå L·ªói ghi l·∫°i l·ªãch s·ª≠ x√≥a nh√¢n kh·∫©u: " + residentName);
        }
    }
    
    /**
     * L·∫•y l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa m·ªôt nh√¢n kh·∫©u
     */
    public List<ChangeHistoryRecord> getResidentChangeHistory(int residentId) {
        return changeHistoryDAO.getChangeRecordsByResidentId(residentId);
    }
    
    /**
     * L·∫•y l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa m·ªôt h·ªô kh·∫©u
     */
    public List<ChangeHistoryRecord> getHouseholdChangeHistory(int householdId) {
        return changeHistoryDAO.getChangeRecordsByHouseholdId(householdId);
    }
    
    /**
     * L·∫•y t·∫•t c·∫£ l·ªãch s·ª≠ thay ƒë·ªïi
     */
    public List<ChangeHistoryRecord> getAllChangeHistory() {
        return changeHistoryDAO.getAllChangeRecords();
    }
    
    /**
     * L·∫•y l·ªãch s·ª≠ thay ƒë·ªïi theo lo·∫°i
     */
    public List<ChangeHistoryRecord> getChangeHistoryByType(String changeType) {
        return changeHistoryDAO.getChangeRecordsByType(changeType);
    }
    
    /**
     * X√≥a t·∫•t c·∫£ l·ªãch s·ª≠ c·ªßa m·ªôt h·ªô kh·∫©u (khi x√≥a h·ªô kh·∫©u)
     */
    public void deleteHouseholdChangeHistory(int householdId) {
        boolean success = changeHistoryDAO.deleteChangeRecordsByHouseholdId(householdId);
        if (success) {
            System.out.println("‚úÖ ƒê√£ x√≥a t·∫•t c·∫£ l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa h·ªô kh·∫©u " + householdId);
        } else {
            System.err.println("‚ùå L·ªói x√≥a l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa h·ªô kh·∫©u " + householdId);
        }
    }
    
    /**
     * X√≥a t·∫•t c·∫£ l·ªãch s·ª≠ c·ªßa m·ªôt nh√¢n kh·∫©u (khi x√≥a nh√¢n kh·∫©u)
     */
    public void deleteResidentChangeHistory(int residentId) {
        boolean success = changeHistoryDAO.deleteChangeRecordsByResidentId(residentId);
        if (success) {
            System.out.println("‚úÖ ƒê√£ x√≥a t·∫•t c·∫£ l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa nh√¢n kh·∫©u " + residentId);
        } else {
            System.err.println("‚ùå L·ªói x√≥a l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa nh√¢n kh·∫©u " + residentId);
        }
    }
    
    /**
     * Th·ªëng k√™ s·ªë l∆∞·ª£ng thay ƒë·ªïi theo lo·∫°i
     */
    public void printChangeStatistics() {
        try {
            List<ChangeHistoryRecord> allRecords = getAllChangeHistory();
            long addCount = allRecords.stream().filter(r -> ChangeHistoryRecord.CHANGE_TYPE_ADD.equals(r.getChangeType())).count();
            long updateCount = allRecords.stream().filter(r -> ChangeHistoryRecord.CHANGE_TYPE_UPDATE.equals(r.getChangeType())).count();
            long deleteCount = allRecords.stream().filter(r -> ChangeHistoryRecord.CHANGE_TYPE_DELETE.equals(r.getChangeType())).count();
            
            System.out.println("\nüìä TH·ªêNG K√ä L·ªäCH S·ª¨ THAY ƒê·ªîI NH√ÇN KH·∫®U:");
            System.out.println("‚ûï Th√™m m·ªõi: " + addCount + " l·∫ßn");
            System.out.println("‚úèÔ∏è C·∫≠p nh·∫≠t: " + updateCount + " l·∫ßn");
            System.out.println("üóëÔ∏è X√≥a: " + deleteCount + " l·∫ßn");
            System.out.println("üìà T·ªïng c·ªông: " + allRecords.size() + " thay ƒë·ªïi\n");
            
        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi th·ªëng k√™ l·ªãch s·ª≠ thay ƒë·ªïi: " + e.getMessage());
        }
    }
} 