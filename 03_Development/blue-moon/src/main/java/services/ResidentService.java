package services;

import dao.residents.ResidentDAO;
import dao.residents.ResidentDAOPostgreSQL;
import models.Resident;
import java.sql.SQLException;
import java.util.List;

public class ResidentService {
    private final ResidentDAO residentDAO;
    private final ChangeHistoryService changeHistoryService;
    
    public ResidentService() throws SQLException {
        this.residentDAO = new ResidentDAOPostgreSQL();
        this.changeHistoryService = new ChangeHistoryService();
    }
    
    /**
     * L·∫•y t·∫•t c·∫£ nh√¢n kh·∫©u
     */
    public List<Resident> getAllResidents() {
        try {
            return residentDAO.getAllResidents();
        } catch (Exception e) {
            System.err.println("L·ªói khi l·∫•y danh s√°ch nh√¢n kh·∫©u: " + e.getMessage());
            return new java.util.ArrayList<>();
        }
    }
    
    /**
     * L·∫•y nh√¢n kh·∫©u theo ID
     */
    public Resident getResidentById(int residentId) {
        try {
            return residentDAO.getResidentById(residentId);
        } catch (Exception e) {
            System.err.println("L·ªói khi l·∫•y nh√¢n kh·∫©u theo ID: " + e.getMessage());
            return null;
        }
    }
    
    /**
     * L·∫•y danh s√°ch nh√¢n kh·∫©u theo household ID
     */
    public List<Resident> getResidentsByHouseholdId(int householdId) {
        try {
            return residentDAO.getResidentsByHouseholdId(householdId);
        } catch (Exception e) {
            System.err.println("L·ªói khi l·∫•y nh√¢n kh·∫©u theo h·ªô kh·∫©u: " + e.getMessage());
            return new java.util.ArrayList<>();
        }
    }
    
    /**
     * T√¨m ki·∫øm nh√¢n kh·∫©u theo t·ª´ kh√≥a
     */
    public List<Resident> searchResidents(String keyword) {
        if (keyword == null || keyword.trim().isEmpty()) {
            return getAllResidents();
        }
        try {
            return residentDAO.searchResidents(keyword.trim());
        } catch (Exception e) {
            System.err.println("L·ªói khi t√¨m ki·∫øm nh√¢n kh·∫©u: " + e.getMessage());
            return new java.util.ArrayList<>();
        }
    }
    
    /**
     * Th√™m nh√¢n kh·∫©u m·ªõi (c√≥ ghi l·∫°i l·ªãch s·ª≠)
     */
    public boolean addResident(Resident resident) {
        if (resident == null) {
            return false;
        }
        
        try {
            System.out.println("üîç DEBUG ResidentService: B·∫Øt ƒë·∫ßu th√™m nh√¢n kh·∫©u " + resident.getFullName());
            
            // Th√™m nh√¢n kh·∫©u v√†o database
            boolean success = residentDAO.addResident(resident);
            
            System.out.println("üîç DEBUG ResidentService: addResident DAO result = " + success);
            System.out.println("üîç DEBUG ResidentService: Resident ID sau insert = " + resident.getResidentId());
            
            if (success) {
                System.out.println("üîç DEBUG ResidentService: Chu·∫©n b·ªã ghi l·ªãch s·ª≠...");
                // ID ƒë√£ ƒë∆∞·ª£c set trong DAO, b√¢y gi·ªù ghi l·∫°i l·ªãch s·ª≠
                changeHistoryService.recordResidentAdded(resident);
                System.out.println("‚úÖ ƒê√£ th√™m nh√¢n kh·∫©u: " + resident.getFullName() + " (ID: " + resident.getResidentId() + ")");
            }
            
            return success;
            
        } catch (Exception e) {
            System.err.println("‚ùå DEBUG ResidentService: L·ªói khi th√™m nh√¢n kh·∫©u: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * C·∫≠p nh·∫≠t th√¥ng tin nh√¢n kh·∫©u (c√≥ ghi l·∫°i l·ªãch s·ª≠)
     */
    public boolean updateResident(Resident resident) {
        if (resident == null || resident.getResidentId() <= 0) {
            return false;
        }
        
        try {
            // C·∫≠p nh·∫≠t nh√¢n kh·∫©u trong database
            boolean success = residentDAO.updateResident(resident);
            
            if (success) {
                // Ghi l·∫°i l·ªãch s·ª≠ C·∫¨P NH·∫¨T nh√¢n kh·∫©u
                changeHistoryService.recordResidentUpdated(resident);
            }
            
            return success;
            
        } catch (Exception e) {
            System.err.println("L·ªói khi c·∫≠p nh·∫≠t nh√¢n kh·∫©u: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * X√≥a nh√¢n kh·∫©u (c√≥ ghi l·∫°i l·ªãch s·ª≠)
     */
    public boolean deleteResident(int residentId) {
        if (residentId <= 0) {
            return false;
        }
        
        try {
            // L·∫•y th√¥ng tin nh√¢n kh·∫©u TR∆Ø·ªöC khi x√≥a ƒë·ªÉ ghi l·∫°i l·ªãch s·ª≠
            Resident resident = residentDAO.getResidentById(residentId);
            if (resident == null) {
                return false;
            }
            
            // Ghi l·∫°i l·ªãch s·ª≠ X√ìA nh√¢n kh·∫©u TR∆Ø·ªöC khi x√≥a
            changeHistoryService.recordResidentDeleted(
                resident.getResidentId(),
                resident.getHouseholdId(),
                resident.getFullName()
            );
            
            // X√≥a nh√¢n kh·∫©u t·ª´ database
            boolean success = residentDAO.deleteResident(residentId);
            
            if (success) {
                System.out.println("‚úÖ ƒê√£ x√≥a nh√¢n kh·∫©u: " + resident.getFullName() + " (ID: " + residentId + ")");
            }
            
            return success;
            
        } catch (Exception e) {
            System.err.println("L·ªói khi x√≥a nh√¢n kh·∫©u: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * Ki·ªÉm tra nh√¢n kh·∫©u c√≥ t·ªìn t·∫°i kh√¥ng
     */
    public boolean residentExists(int residentId) {
        return getResidentById(residentId) != null;
    }
    
    /**
     * Ki·ªÉm tra CCCD ƒë√£ t·ªìn t·∫°i ch∆∞a
     */
    public boolean citizenIdExists(String citizenId) {
        if (citizenId == null || citizenId.trim().isEmpty()) {
            return false;
        }
        List<Resident> residents = searchResidents(citizenId);
        return !residents.isEmpty();
    }
    
    /**
     * L·∫•y t·ªïng s·ªë nh√¢n kh·∫©u
     */
    public int getTotalResidents() {
        return getAllResidents().size();
    }
    
    /**
     * L·∫•y s·ªë nh√¢n kh·∫©u trong m·ªôt h·ªô kh·∫©u c·ª• th·ªÉ
     */
    public int getResidentsCountByHouseholdId(int householdId) {
        return getResidentsByHouseholdId(householdId).size();
    }
    
    /**
     * L·∫•y l·ªãch s·ª≠ thay ƒë·ªïi c·ªßa m·ªôt nh√¢n kh·∫©u
     */
    public List<models.ChangeHistoryRecord> getResidentChangeHistory(int residentId) {
        return changeHistoryService.getResidentChangeHistory(residentId);
    }
    
    /**
     * In th·ªëng k√™ l·ªãch s·ª≠ thay ƒë·ªïi
     */
    public void printChangeStatistics() {
        changeHistoryService.printChangeStatistics();
    }
} 